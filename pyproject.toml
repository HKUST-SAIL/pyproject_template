[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "template-project"
version = "0.0.1"
description = "Template Repo for python projects with DL"
readme = "README.md"
license = { text="Apache 2.0"}
requires-python = ">=3.10.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]

dependencies = [
#    "torch>=1.13.1",
#    "torchvision>=0.14.1",
#    "nbformat==5.5.0",
]

[project.urls]
"Documentation" = "https://github.com/poptree/pyproject_templete"


[project.optional-dependencies]

# Generative related dependencies
gen = [
#    "diffusers==0.16.1",
#    "transformers==4.29.2",
#    "accelerate==0.19.0",
#    "bitsandbytes==0.39.0",
#    "sentencepiece==0.1.99",
]


# Development packages
dev = [
    "pre-commit==3.3.2",
    "pytest==7.1.2",
    "pytest-xdist==2.5.0",
    "typeguard==2.13.3",
    "ruff==0.1.13",
    "sshconf==0.2.5",
#    "pycolmap>=0.3.0",  # NOTE: pycolmap==0.3.0 is not available on newer python versions
#    "diffusers==0.16.1",
#    "opencv-stubs==0.0.7",
#    "transformers==4.29.2",
    "pyright==1.1.331",
#    # NOTE: Disabling projectaria-tools because it doesn't have prebuilt windows wheels
#    # Syntax comes from here: https://pip.pypa.io/en/stable/reference/requirement-specifiers/
#    "projectaria-tools>=1.3.1; sys_platform != 'win32'",
#    # pin torch to <=2.1 to fix https://github.com/pytorch/pytorch/issues/118736
#    "torch>=1.13.1,<2.2",
]

# Documentation related packages
docs = [
#    "furo==2022.09.29",
#    # Specifying ipython for https://github.com/ipython/ipython/issues/13845
#    "ipython==8.6.0",
#    "readthedocs-sphinx-search==0.1.2",
#    "myst-nb==0.16.0",
#    "nbconvert==7.2.5",
#    "nbformat==5.5.0",
#    "sphinx==5.2.1",
#    "sphinxemoji==0.2.0",
#    "sphinx-argparse==0.3.1",
#    "sphinx-copybutton==0.5.0",
#    "sphinx-design==0.2.0",
#    "sphinxext-opengraph==0.6.3"
]

# [project.scripts]
# Note, add entrypoint name to nerfstudio/scripts/completions/install.py to include CLI completion
#ns-install-cli = "nerfstudio.scripts.completions.install:entrypoint"
#ns-process-data = "nerfstudio.scripts.process_data:entrypoint"
#ns-download-data = "nerfstudio.scripts.downloads.download_data:entrypoint"
#ns-train = "nerfstudio.scripts.train:entrypoint"
#ns-viewer = "nerfstudio.scripts.viewer.run_viewer:entrypoint"
#ns-eval = "nerfstudio.scripts.eval:entrypoint"
#ns-render = "nerfstudio.scripts.render:entrypoint"
#ns-export = "nerfstudio.scripts.exporter:entrypoint"
#ns-dev-test = "nerfstudio.scripts.github.run_actions:entrypoint"
#ns-dev-sync-viser-message-defs = "nerfstudio.scripts.viewer.sync_viser_message_defs:entrypoint"
#
[tool.setuptools.packages.find]
include = ["pyproject*"]
#
[tool.setuptools.package-data]
"*" = ["*.cu", "*.json", "py.typed", "setup.bash", "setup.zsh"]
#
[tool.pytest.ini_options]
addopts = "-n=4 --typeguard-packages=pyproject_template --disable-warnings"
testpaths = [
    "tests",
]

[tool.pyright]
include = ["pyproject_template"]
exclude = ["**/node_modules",
    "**/__pycache__",
]
defineConstant = { DEBUG = true }
#
reportMissingImports = "warning"
reportMissingTypeStubs = false
reportPrivateImportUsage = false
#
pythonVersion = "3.10"
pythonPlatform = "Linux"
#
[tool.ruff]
line-length = 120
respect-gitignore = false
select = [
    "E",  # pycodestyle errors.
    "F",  # Pyflakes rules.
    "I",  # isort formatting.
    "PLC",  # Pylint convention warnings.
    "PLE",  # Pylint errors.
    "PLR",  # Pylint refactor recommendations.
    "PLW",  # Pylint warnings.
]
ignore = [
    "E501",  # Line too long.
    "F722",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "F821",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "PLR2004",  # Magic value used in comparison.
    "PLR0915",  # Too many statements.
    "PLR0913",  # Too many arguments.
    "PLC0414",  # Import alias does not rename variable. (this is used for exporting names)
    "PLC1901",  # Use falsey strings.
    "PLR5501",  # Use `elif` instead of `else if`.
    "PLR0911",  # Too many return statements.
    "PLR0912",  # Too many branches.
    "PLW0603",  # Globa statement updates are discouraged.
    "PLW2901",  # For loop variable overwritten.
]
#

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["pyproject_template"]
split-on-trailing-comma = false
